<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liqinxu.crm.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.liqinxu.crm.domain.Role">
        <id column="id" property="id"/>
        <result column="sn" property="sn"/>
        <result column="name" property="name"/>
    </resultMap>
    <delete id="deleteByPrimaryKey">
        DELETE FROM role
        WHERE id = #{id}
    </delete>
    <delete id="deleteRelation">
        DELETE FROM role_permission
        WHERE role_id = #{id}
    </delete>
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO role (sn, name)
        VALUES (#{sn}, #{name})
    </insert>

    <insert id="saveRelation">
        INSERT INTO role_permission (role_id, permission_id) VALUES (#{roleId}, #{permissionId});
    </insert>

    <update id="updateByPrimaryKey">
        UPDATE role
        SET sn   = #{sn},
            name = #{name}
        WHERE id = #{id}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        SELECT
            id,
            sn,
            name
        FROM role
        WHERE id = #{id}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
            id,
            sn,
            name
        FROM role
    </select>

    <select id="queryForCount" resultType="int">
        SELECT count(id)
        FROM role
    </select>

    <select id="queryForList" resultMap="BaseResultMap">
        SELECT
            id,
            sn,
            name
        FROM role
        LIMIT #{start}, #{rows}
    </select>
    <select id="selectRolesByEmpId" resultType="string">
        SELECT r.sn
        FROM employee_role er
            JOIN role r ON er.role_id = r.id
        WHERE er.employee_id = #{employeeId}
    </select>
</mapper>